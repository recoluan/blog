import{_ as e,c as t,a as l,b as n,d as o,e as i,o as p,r as c}from"./app-C99nLWlX.js";const r={},d={href:"http://recoluan.gitlab.io",target:"_blank",rel:"noopener noreferrer"};function u(v,s){const a=c("ExternalLinkIcon");return p(),t("div",null,[s[2]||(s[2]=l(`<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>项目中有这么一个需求，就是按需启动mock功能。考虑到mock只是在特定情况下，所以考虑通过 <code>cross-env</code> 来处理。</p></div><h2 id="cross-env修改生产环境变量" tabindex="-1"><a class="header-anchor" href="#cross-env修改生产环境变量"><span>cross-env修改生产环境变量</span></a></h2><ol><li>我想要的最终效果是npm run dev:mock 来启动mock，所以先安装 cross-env</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> i <span class="token parameter variable">--save</span> cross-env</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>找到 <code>/config/dev.evn.js</code> ，添加MOCK变量</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token constant">MOCK</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MOCK</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;false&#39;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>在package.json中配置变量</li></ol><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;dev:mock&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env MOCK=true webpack --config build/webpack.config.js&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>使用变量</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MOCK</span> <span class="token operator">===</span> <span class="token string">&#39;true&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  fetchMock<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;https://xxx/user/login&#39;</span><span class="token punctuation">,</span> loginAPI<span class="token punctuation">.</span>login<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>启动MOCK</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> run dev:mock</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,12)),n("p",null,[s[1]||(s[1]=o("个人博客：")),n("a",d,[s[0]||(s[0]=n("strong",null,"午后南杂",-1)),i(a)])])])}const m=e(r,[["render",u],["__file","110301.html.vue"]]),g=JSON.parse('{"path":"/blogs/frontEnd/2018/110301.html","title":"webpack多版本控制方案","lang":"zh-CN","frontmatter":{"title":"webpack多版本控制方案","date":"2018-11-03T00:00:00.000Z","tags":["webpack","node"],"categories":["frontEnd"]},"headers":[{"level":2,"title":"cross-env修改生产环境变量","slug":"cross-env修改生产环境变量","link":"#cross-env修改生产环境变量","children":[]}],"git":{"createdTime":1541235833000,"updatedTime":1590769810000,"contributors":[{"name":"reco_luan","email":"recoluan@outlook.com","commits":1}]},"filePathRelative":"blogs/frontEnd/2018/110301.md"}');export{m as comp,g as data};
